export const kandelABI = [
  {
    inputs: [
      {
        internalType: "address",
        name: "mgv",
        type: "address",
      },
      {
        components: [
          { internalType: "address", name: "outbound_tkn", type: "address" },
          { internalType: "address", name: "inbound_tkn", type: "address" },
        ],
        internalType: "struct OLKey",
        name: "olKeyBaseQuote",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "gasreq",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SetGasprice",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SetGasreq",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SetStepSize",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Credit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Debit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "SetBaseQuoteTickOffset",
    type: "event",
  },
  {
    inputs: [{ internalType: "uint256", name: "stepSize", type: "uint256" }],
    name: "setStepSize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "gasprice", type: "uint256" }],
    name: "setGasprice",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint256", name: "gasreq", type: "uint256" }],
    name: "setGasreq",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_baseQuoteTickOffset",
        type: "uint256",
      },
    ],
    name: "setBaseQuoteTickOffset",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "tuple",
        name: "distribution",
        type: "tuple",
      },
      {
        components: [
          { internalType: "uint32", name: "gasprice", type: "uint32" },
          { internalType: "uint24", name: "gasreq", type: "uint24" },
          { internalType: "uint32", name: "stepSize", type: "uint32" },
          { internalType: "uint32", name: "pricePoints", type: "uint32" },
        ],
        internalType: "struct CoreKandel.Params",
        name: "parameters",
        type: "tuple",
      },
      { internalType: "uint256", name: "baseAmount", type: "uint256" },
      { internalType: "uint256", name: "quoteAmount", type: "uint256" },
    ],
    name: "populate",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "tuple",
        name: "distribution",
        type: "tuple",
      },
    ],
    name: "populateChunk",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint8", name: "ba", type: "uint8" }],
    name: "reserveBalance",
    outputs: [{ internalType: "uint256", name: "balance", type: "uint256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [{ internalType: "uint8", name: "ba", type: "uint8" }],
    name: "pending",
    outputs: [{ internalType: "int256", name: "", type: "int256" }],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "baseAmount", type: "uint256" },
      { internalType: "uint256", name: "quoteAmount", type: "uint256" },
    ],
    name: "depositFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "baseAmount", type: "uint256" },
      { internalType: "uint256", name: "quoteAmount", type: "uint256" },
      { internalType: "address", name: "recipient", type: "address" },
    ],
    name: "withdrawFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "from", type: "uint256" },
      { internalType: "uint256", name: "to", type: "uint256" },
      { internalType: "uint256", name: "baseAmount", type: "uint256" },
      { internalType: "uint256", name: "quoteAmount", type: "uint256" },
      { internalType: "uint256", name: "freeWei", type: "uint256" },
      { internalType: "address", name: "recipient", type: "address" },
    ],
    name: "retractAndWithdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "from", type: "uint256" },
      { internalType: "uint256", name: "to", type: "uint256" },
      { internalType: "int24", name: "baseQuoteTickIndex0", type: "int24" },
      {
        internalType: "uint256",
        name: "_baseQuoteTickOffset",
        type: "uint256",
      },
      { internalType: "uint256", name: "firstAskIndex", type: "uint256" },
      { internalType: "uint256", name: "bidGives", type: "uint256" },
      { internalType: "uint256", name: "askGives", type: "uint256" },
      { internalType: "uint256", name: "pricePoints", type: "uint256" },
      { internalType: "uint256", name: "stepSize", type: "uint256" },
    ],
    name: "createDistribution",
    outputs: [{ internalType: "tuple", name: "distribution", type: "tuple" }],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "from", type: "uint256" },
      { internalType: "uint256", name: "to", type: "uint256" },
      { internalType: "int24", name: "baseQuoteTickIndex0", type: "int24" },
      {
        internalType: "uint256",
        name: "_baseQuoteTickOffset",
        type: "uint256",
      },
      { internalType: "uint256", name: "firstAskIndex", type: "uint256" },
      { internalType: "uint256", name: "bidGives", type: "uint256" },
      { internalType: "uint256", name: "askGives", type: "uint256" },
      {
        components: [
          { internalType: "uint32", name: "gasprice", type: "uint32" },
          { internalType: "uint24", name: "gasreq", type: "uint24" },
          { internalType: "uint32", name: "stepSize", type: "uint32" },
          { internalType: "uint32", name: "pricePoints", type: "uint32" },
        ],
        internalType: "struct CoreKandel.Params",
        name: "parameters",
        type: "tuple",
      },
      { internalType: "uint256", name: "baseAmount", type: "uint256" },
      { internalType: "uint256", name: "quoteAmount", type: "uint256" },
    ],
    name: "populateFromOffset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      { internalType: "uint256", name: "from", type: "uint256" },
      { internalType: "uint256", name: "to", type: "uint256" },
      { internalType: "int24", name: "baseQuoteTickIndex0", type: "int24" },
      { internalType: "uint256", name: "firstAskIndex", type: "uint256" },
      { internalType: "uint256", name: "bidGives", type: "uint256" },
      { internalType: "uint256", name: "askGives", type: "uint256" },
    ],
    name: "populateChunkFromOffset",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
];
